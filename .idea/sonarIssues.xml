<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="issues">
    <option name="index">
      <map>
        <entry key="/Dummy.txt">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../../Libraries/pkg/mod/github.com/helmutkemper/iotmaker.docker.builder.network.interface@v0.0.0-20210511025142-a65b878f1e40/typeContainerBuilderNetworkInterface.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../../Libraries/pkg/mod/github.com/helmutkemper/iotmaker.docker.builder.network@v0.0.0-20210511023329-60c0997e5db5/typeContainerBuilderNetwork.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../../Libraries/pkg/mod/github.com/helmutkemper/iotmaker.docker@v1.0.7/v1.0.1/containerInspectParsed.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../../Libraries/pkg/mod/github.com/helmutkemper/iotmaker.docker@v1.0.8-0.20210509190857-5715e272d6ec/v1.0.1/containerFindIdByName.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../cacheComplexContainerTest/main.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../cacheComplexContainerTest/readme.md">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../cacheComplexTest/dockerNetwork/typeDockerNetwork.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../cacheComplexTest/go.mod">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../cacheComplexTest/interfaces/network.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../cacheComplexTest/natsContainer/typeNatsContainer.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../cacheComplexTest/natsContainer/typeNatsContainer_test.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../cacheComplexTest/simple/main.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../cacheComplexTest/simple/simpleIntegration_test.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../go-git/main.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../iotmaker.docker.builder.interface/typeContainerBuilderInterface.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/SetImageName.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/SetNetworkDocker.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/SetServerBuildPath.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcAddPortToChange.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcAddPortToOpen.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcContainerBuildFromImage.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcContainerInspect.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcContainerPause.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcContainerRemove.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcContainerStart.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcContainerStop.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcFindTextInsideContainerLog.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcGetChannelEvent.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcGetChannelOnContainerInspect.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcGetChannelOnContainerReady.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcGetContainerLog.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcGetIdByContainerName.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcGetLastInspect.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcGetLastLogs.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcImageBuildFromFolder.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcImageBuildFromServer.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcImagePull.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcImageRemove.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcInit.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcRemoveAllByNameContains.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcSetBuildFolderPath.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcSetContainerName.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcSetDoNotOpenContainersPorts.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcSetEnvironmentVar.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcSetGitCloneToBuild.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcSetGitCloneToBuildWithPrivateSshKey.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcSetGitCloneToBuildWithPrivateToken.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcSetGitCloneToBuildWithUserPassworh.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcSetInspectInterval.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcSetServerBuildPath.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcSetWaitString.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcVerifyImageName.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/funcWaitForTextInContainerLog.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/go.mod">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/typeChangePort.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/typeContainerBuilder.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/typeContainerBuilder_test.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../iotmaker.docker.util.whaleAquarium.sample/main.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../iotmaker.docker/v1.0.1/containerInspectParsed.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../iotmaker.docker/v1.0.1/containerPause.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../iotmaker.docker/v1.0.1/containerStart.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../iotmaker.docker/v1.0.1/imageBuildFromFolder.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../iotmaker.network.util.overload/go.mod">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../overload/Dockerfile">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../overload/go.mod">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../overload/main.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../queue/dockerfile">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../queue/main.go">
          <value>
            <set />
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/../queue/natStatus/typeNatsStatusTest.go">
          <value>
            <set />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>